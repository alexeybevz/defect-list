<UserControl x:Class="DefectListWpfControl.DefectList.Components.BomItemReadWriteFieldsViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commons="clr-namespace:DefectListWpfControl.DefectList.Commons"
             xmlns:viewModels="clr-namespace:DefectListWpfControl.DefectList.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:BomHeaderDetailsFormViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <commons:FloatNumberValueConverter x:Key="FloatNumberValueConverter" />
        <commons:IsRequiredSubmitValueConverter x:Key="IsRequiredSubmitValueConverter" />
        <commons:IsSubmittedValueConverter x:Key="IsSubmittedValueConverter" />
        <commons:BomItemFieldPermissionToVisibilityConverter x:Key="BomItemFieldPermissionToVisibilityConverter" />
        <commons:BomItemFieldPermissionToIsReadOnlyConverter x:Key="BomItemFieldPermissionToIsReadOnlyConverter" />
        <Style TargetType="TextBox">
            <Setter Property="Margin"
                    Value="2" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError"
                         Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                    <Setter Property="Foreground"
                            Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Margin"
                    Value="2" />
        </Style>
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="90" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="45" />
            <RowDefinition Height="45" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="200*" />
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0"
               Grid.Column="0"
               Name="StructureNumberLabel"
               Content="Структура"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=StructureNumber}" />
        <TextBox Grid.Row="0"
                 Grid.Column="1"
                 Name="StructureNumberTextBox"
                 Text="{Binding StructureNumber, Mode=TwoWay}"
                 IsEnabled="False"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=StructureNumber}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=StructureNumber}" />

        <Label Grid.Row="1"
               Grid.Column="0"
               Name="QtyRestoreLabel"
               Content="Кол-во ремонт"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=QtyRestore}" />
        <TextBox Grid.Row="1"
                 Grid.Column="1"
                 Name="QtyRestoreTextBox"
                 Text="{Binding QtyRestore, Mode=TwoWay, Converter={StaticResource FloatNumberValueConverter}}"
                 PreviewTextInput="NumberValidationTextBox"
                 PreviewKeyDown="QtyRestoreTextBox_PreviewKeyDown"
                 CommandManager.PreviewExecuted="QtyRestoreTextBox_OnPreviewExecuted"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=QtyRestore}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=QtyRestore}" />

        <Label Grid.Row="2"
               Grid.Column="0"
               Name="QtyReplaceLabel"
               Content="Кол-во замена"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=QtyReplace}" />
        <TextBox Grid.Row="2"
                 Grid.Column="1"
                 Name="QtyReplaceTextBox"
                 Text="{Binding QtyReplace, Mode=TwoWay, Converter={StaticResource FloatNumberValueConverter}}"
                 PreviewTextInput="NumberValidationTextBox"
                 PreviewKeyDown="QtyReplaceTextBox_PreviewKeyDown"
                 CommandManager.PreviewExecuted="QtyReplaceTextBox_OnPreviewExecuted"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=QtyReplace}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=QtyReplace}" />

        <Label Grid.Row="3"
               Grid.Column="0"
               Name="DefectLabel"
               Content="Установленный дефект"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=Defect}" />
        <TextBox Grid.Row="3"
                 Grid.Column="1"
                 Name="DefectTextBox"
                 Text="{Binding Defect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=Defect}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=Defect,
                            UpdateSourceTrigger=PropertyChanged}" />

        <Label Grid.Row="4"
               Grid.Column="0"
               Name="ChoiceDefectLabel"
               Content="Возможные дефекты"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=DefectToDecisionMaps}" />
        <Grid Grid.Row="4"
              Grid.Column="1"
              Margin="2"
              Visibility="{Binding DataContext,
                           RelativeSource={RelativeSource Self},
                           Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                           ConverterParameter=DefectToDecisionMaps}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ComboBox Grid.Column="0"
                      ItemsSource="{Binding DefectListItemViewModel.DefectToDecisionMaps}"
                      x:Name="ComboBoxPosibleDefect"
                      SelectedValue="{Binding DefectListItemViewModel.SelectedPossibleDefect, Mode=TwoWay}"
                      IsEditable="True">
                <ComboBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"
                                           Padding="5"
                                           FontSize="14"
                                           FontWeight="DemiBold" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ComboBox.GroupStyle>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding IsSelected}"
                                      Width="20"
                                      Checked="ToggleButton_OnChecked" />
                            <TextBlock Text="{Binding}"
                                       Width="{Binding ActualWidth, ElementName=ComboBoxPosibleDefect}"
                                       PreviewMouseDown="PosibleDefect_OnPreviewMouseLeftButtonDown" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Column="1"
                    Content="..."
                    Margin="5 0 0 0"
                    Command="{Binding DefectListItemViewModel.OpenMapDefectToDecisionEditFormCommand}"
                    Style="{StaticResource SecondaryButton}" />
        </Grid>

        <Label Grid.Row="5"
               Grid.Column="0"
               Content=""
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=DefectToDecisionMaps}" />
        <CheckBox Grid.Row="5"
                  Grid.Column="1"
                  Name="CheckBoxClosePosibleDefectsBehaviour"
                  Margin="2 5 0 0"
                  Content="Закрыть список после 1 клика"
                  IsChecked="True"
                  Visibility="{Binding DataContext,
                               RelativeSource={RelativeSource Self},
                               Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                               ConverterParameter=DefectToDecisionMaps}" />

        <Label Grid.Row="6"
               Grid.Column="0"
               Name="DecisionLabel"
               Content="Решение по устранению"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=Decision}" />
        <ComboBox Grid.Row="6"
                  Grid.Column="1"
                  Name="DecisionTextBox"
                  Margin="2"
                  ItemsSource="{Binding DefectListItemViewModel.PossibleDecisions, Mode=OneWay}"
                  Text="{Binding Decision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  IsEditable="False">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=Decision}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <TextBox Grid.Row="6"
                 Grid.Column="1"
                 Margin="2"
                 Text="{Binding Decision}"
                 IsReadOnly="True">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility"
                            Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=Decision}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="7"
               Grid.Column="0"
               Name="FinalDecisionLabel"
               Content="Окончательное решение по устранению"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=FinalDecision}" />
        <ComboBox Grid.Row="7"
                  Grid.Column="1"
                  Name="FinalDecisionTextBox"
                  Margin="2"
                  ItemsSource="{Binding DefectListItemViewModel.PossibleDecisions, Mode=OneWay}"
                  Text="{Binding FinalDecision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  IsEditable="False">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=FinalDecision}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <TextBox Grid.Row="7"
                 Grid.Column="1"
                 Margin="2"
                 Text="{Binding FinalDecision}"
                 IsReadOnly="True">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility"
                            Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=FinalDecision}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="8"
               Grid.Column="0"
               Name="AvailableTechnologicalProcess"
               Content="Доступные тех.процессы"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=AvailableTechnologicalProcess}" />
        <Grid Grid.Row="8"
              Grid.Column="1"
              Margin="2 0"
              Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=AvailableTechnologicalProcess}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    Content="Ремонт"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch"
                    Margin="0 5 5 5"
                    Command="{Binding SetRepairDecisionCommand}"
                    Visibility="{Binding IsExistsRepairTechnologicalProcess, Converter={StaticResource WindowBooleanToVisibilityConverter}}" />
            <Button Grid.Column="1"
                    Content="Замена"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch"
                    Margin="5 5 0 5"
                    Command="{Binding SetReplaceDecisionCommand}"
                    Visibility="{Binding IsExistsReplaceTechnologicalProcess, Converter={StaticResource WindowBooleanToVisibilityConverter}}" />
        </Grid>

        <Label Grid.Row="9"
               Grid.Column="0"
               Name="TechnologicalProcessUsedLabel"
               Content="Применяемый тех. процесс"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=TechnologicalProcessUsed}" />
        <TextBox Grid.Row="9"
                 Grid.Column="1"
                 Name="TechnologicalProcessUsedTextBox"
                 Text="{Binding TechnologicalProcessUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=TechnologicalProcessUsed}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=TechnologicalProcessUsed}" />

        <Label Grid.Row="10"
               Grid.Column="0"
               Name="IsRequiredSubmitLabel"
               Content="Требуется предъявить ВП"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=IsRequiredSubmit}" />
        <ComboBox Grid.Row="10"
                  Grid.Column="1"
                  Name="IsRequiredSubmitTextBox"
                  Margin="2"
                  ItemsSource="{Binding DefectListItemViewModel.IsRequiredSubmitLabels, Mode=OneWay}"
                  Text="{Binding IsRequiredSubmit, Mode=TwoWay, Converter={StaticResource IsRequiredSubmitValueConverter}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=IsRequiredSubmit}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <TextBox Grid.Row="10"
                 Grid.Column="1"
                 Margin="2"
                 Text="{Binding IsRequiredSubmit, Converter={StaticResource IsRequiredSubmitValueConverter}}"
                 IsReadOnly="True">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility"
                            Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=IsRequiredSubmit}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="11"
               Grid.Column="0"
               Name="IsSubmittedLabel"
               Content="Предъявлено ВП"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=IsSubmitted}" />
        <ComboBox Grid.Row="11"
                  Grid.Column="1"
                  Name="IsSubmittedTextBox"
                  Margin="2"
                  ItemsSource="{Binding DefectListItemViewModel.IsSubmittedLabels, Mode=OneWay}"
                  Text="{Binding IsSubmitted, Mode=TwoWay, Converter={StaticResource IsSubmittedValueConverter}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=IsSubmitted}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <TextBox Grid.Row="11"
                 Grid.Column="1"
                 Margin="2"
                 Text="{Binding IsSubmitted, Converter={StaticResource IsSubmittedValueConverter}}"
                 IsReadOnly="True">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Visibility"
                            Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=IsSubmitted}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Grid.Row="12"
               Grid.Column="0"
               Name="CommentDefLabel"
               Content="Примечание"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=CommentDef}" />
        <TextBox Grid.Row="12"
                 Grid.Column="1"
                 Name="CommentDefTextBox"
                 Text="{Binding CommentDef, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=CommentDef}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=CommentDef}" />

        <Label Grid.Row="13"
               Grid.Column="0"
               Name="SerialNumberLabel"
               Content="Заводской номер"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=SerialNumber}" />
        <TextBox Grid.Row="13"
                 Grid.Column="1"
                 Name="SerialNumberTextBox"
                 Text="{Binding SerialNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=SerialNumber}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=SerialNumber}" />

        <Label Grid.Row="14"
               Grid.Column="0"
               Name="RepairMethodNameLabel"
               Content="Рекомендация РКД"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=RepairMethodName}" />
        <TextBox Grid.Row="14"
                 Grid.Column="1"
                 Name="RepairMethodNameTextBox"
                 Text="{Binding RepairMethodName, Mode=OneWay}"
                 IsReadOnly="True"
                 Background="Khaki"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=RepairMethodName}" />

        <Label Grid.Row="15"
               Grid.Column="0"
               Name="ResearchActionLabel"
               Content="Мероприятия по изучению"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=ResearchAction}" />
        <TextBox Grid.Row="15"
                 Grid.Column="1"
                 Name="ResearchActionTextBox"
                 Text="{Binding ResearchAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=ResearchAction}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=ResearchAction}" />

        <Label Grid.Row="16"
               Grid.Column="0"
               Name="ResearchResultLabel"
               Content="Результаты изучения"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=ResearchResult}" />
        <TextBox Grid.Row="16"
                 Grid.Column="1"
                 Name="ResearchResultTextBox"
                 Text="{Binding ResearchResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 TextWrapping="Wrap"
                 Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=ResearchResult}"
                 IsReadOnly="{Binding DataContext,
                            RelativeSource={RelativeSource Self}, 
                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                            ConverterParameter=ResearchResult}" />

        <Label Grid.Row="17"
               Grid.Column="0"
               Content="Идентификатор строки"
               Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=Id}" />
        <TextBox Grid.Row="17"
                 Grid.Column="1"
                 Text="{Binding Id, Mode=TwoWay}"
                 Visibility="{Binding DataContext,
                                            RelativeSource={RelativeSource Self},
                                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                                            ConverterParameter=Id}"
                 IsReadOnly="{Binding DataContext, RelativeSource={RelativeSource Self}, 
                                            Converter={StaticResource BomItemFieldPermissionToIsReadOnlyConverter},
                                            ConverterParameter=Id}" />

        <Grid Grid.Row="18"
              Grid.ColumnSpan="2"
              Margin="0 20"
              Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=SaveButtons}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"
                               MinHeight="30"
                               MaxHeight="60" />
                <RowDefinition Height="*"
                               MinHeight="30"
                               MaxHeight="70" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1.3*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0"
                    Grid.Column="0"
                    Content="Сохранить"
                    Command="{Binding DefectListItemViewModel.SaveDefectPropsAndMoveNextCommand}"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch" />
            <Button Grid.Row="0"
                    Grid.Column="1"
                    Margin="20 0"
                    Command="{Binding DefectListItemViewModel.SaveDefectPropsOnAssemblyCommand}"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch">
                <TextBlock Text="Сохранить и применить на состав сб.ед."
                           TextWrapping="Wrap"
                           TextAlignment="Center" />
            </Button>
            <Button Grid.Row="0"
                    Grid.Column="2"
                    Command="{Binding DefectListItemViewModel.SaveDefectPropsOnSelectedBomItemsCommand}"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch">
                <TextBlock Text="Сохранить и применить на строки с галочкой"
                           TextWrapping="Wrap"
                           TextAlignment="Center" />
            </Button>
            <Button Grid.Row="1"
                    Grid.Column="1"
                    Margin="20 10"
                    Command="{Binding DefectListItemViewModel.SaveDefectPropsOnAssemblyWithNotFilledRowsCommand}"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch">
                <TextBlock Text="Сохранить и применить на состав сб.ед. с учетом существующих изменений"
                           TextWrapping="Wrap"
                           TextAlignment="Center" />
            </Button>
            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       Grid.ColumnSpan="3"
                       Text="{Binding DefectListItemViewModel.InfoMessage.Text}"
                       Background="{Binding DefectListItemViewModel.InfoMessage.Color}"
                       Margin="0, 20, 0, 0"
                       TextWrapping="WrapWithOverflow"
                       Height="Auto"
                       TextAlignment="Center"
                       FontSize="14"
                       Padding="5" />
        </Grid>

        <StackPanel Grid.Row="19"
                    Grid.ColumnSpan="2"
                    Margin="20 20 20 0"
                    Visibility="{Binding DataContext,
                            RelativeSource={RelativeSource Self},
                            Converter={StaticResource BomItemFieldPermissionToVisibilityConverter},
                            ConverterParameter=CreateOneRouteChartCommandButton}">
            <Button Content="Создать и распечатать МК"
                    Command="{Binding DefectListItemViewModel.CreateOneRouteChartCommand}"
                    IsEnabled="{Binding IsValid, UpdateSourceTrigger=PropertyChanged }"
                    Style="{StaticResource SecondaryButton}"
                    HorizontalAlignment="Stretch" />
        </StackPanel>
    </Grid>
</UserControl>
